This is a full-featured React + TypeScript QR Code Studio app. It already works perfectly: supports multiple QR types, canvas rendering (PNG & SVG), local IndexedDB history, dark/light theme toggle, multilingual settings, real-time analytics, and full QR customization (colors, size, overlays, logos).

The codebase uses Tailwind utility classes and is logically structured, but the current UI looks like a typical AI-generated template (basic cards, standard layout). I want a full **visual redesign** to make it feel uniquely crafted â€” like a high-end developer-designed app.

ðŸŽ¯ Design Goals:
- Preserve current functionality â€” do not break QR generation or app logic
- Keep component structure and props flow intact
- **Redesign the look**: ditch the default white card UI and generic layout
- Fix any dead routes or links from the top nav (e.g., `Analytics` tab if broken)
- Maintain accessibility and responsiveness

ðŸŒŒ New UI Vision (Style Guide):
- Use a dark-modern base: `from-[#0f0f0f] to-[#1a1a1a]` background
- Replace white cards with **blurred glassmorphism containers** or **layered frosted panels**
- Use a **custom font stack** like `Poppins`, `Space Grotesk`, or `Satoshi`
- Animate QR preview subtly: shimmer on render, glow pulse on hover
- Redesign header to be more compact, animated, and brand-like (make "QR Code Studio" feel like a real product)
- Replace default buttons and selectors with **neumorphic / glass UI** (rounded corners, soft shadows)
- Add section transitions using `framer-motion` (if safe to add)
- Optional: Add a minimalist background texture (e.g. grain, gridlines, low opacity mesh)

ðŸ›  Fixes to Apply:
- Ensure the Analytics or secondary nav tab routes do not crash or 404 â€” either fix or hide until wired
- Optimize the color input spacing and spacing between customization rows
- Improve mobile spacing + layout responsiveness on preview area

ðŸ’¡ Important Constraints:
- Keep logic for QR code generation, theme toggles, and form data untouched
- Preserve existing Tailwind usage but feel free to override for new styles
- Do not bring in large UI libraries like MUI or Chakra â€” minimal, handcrafted style only
- Continue using modular functional components and React hooks

Let the final design feel intentional, premium, and something you'd proudly deploy or sell. Imagine this is a portfolio-level SaaS QR generator that balances visual finesse with React performance.
